"""Initial migration

Revision ID: 40863c5bfc0b
Revises: 
Create Date: 2024-06-05 14:38:03.021217

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '40863c5bfc0b'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop foreign key constraints
    op.drop_constraint('stock_seller_id_fkey', 'stock', type_='foreignkey')
    op.drop_constraint('purchases_seller_id_fkey', 'purchases', type_='foreignkey')
    op.drop_constraint('purchases_stock_id_fkey', 'purchases', type_='foreignkey')

    # Drop tables
    op.drop_table('stock')
    op.drop_table('purchases')
    op.drop_table('adidas_products')
    op.drop_table('customers')
    op.drop_table('sellers')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('stock',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('stock_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('seller_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('size', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('discount_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['adidas_products.product_id'], name='stock_product_id_fkey'),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], name='stock_seller_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stock_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('purchases',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('customer_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_price', sa.NUMERIC(precision=10, scale=2), autoincrement=False, nullable=False),
    sa.Column('purchase_date', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('stock_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('seller_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], name='purchases_customer_id_fkey'),
    sa.ForeignKeyConstraint(['product_id'], ['adidas_products.product_id'], name='purchases_product_id_fkey'),
    sa.ForeignKeyConstraint(['seller_id'], ['sellers.id'], name='purchases_seller_id_fkey'),
    sa.ForeignKeyConstraint(['stock_id'], ['stock.id'], name='purchases_stock_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='purchases_pkey')
    )
    op.create_table('adidas_products',
    sa.Column('product_id', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('brand', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('category', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('model_name', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('color', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('price', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('discount', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image_side_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image_top_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('image_34_url', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('gender', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('product_id', name='adidas_products_pkey')
    )
    op.create_table('customers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('total_orders_value', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0.0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='customers_pkey'),
    sa.UniqueConstraint('email', name='customers_email_key')
    )
    op.create_table('sellers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=True),
    sa.Column('total_orders_value', sa.NUMERIC(precision=10, scale=2), server_default=sa.text('0.0'), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='sellers_pkey'),
    sa.UniqueConstraint('email', name='sellers_email_key')
    )
    # ### end Alembic commands ###
